#!/bin/bash

# Função para exibir mensagens de erro
show_error() {
    tput setaf 7; tput setab 1; tput bold
    echo ""; echo "$1"; echo ""
    tput sgr0
    exit 1
}

# Função para exibir mensagens de sucesso
show_success() {
    tput setaf 7; tput setab 4; tput bold
    echo ""; echo "$1"; echo ""
    tput sgr0
}

# Exibir cabeçalho
tput setaf 7; tput setab 4; tput bold
printf '%20s%s\n' "   Alterar limite de conexões simultâneas   "
tput sgr0

database="/root/usuarios.db"

# Verificar se o arquivo de banco de dados existe
if [ ! -f "$database" ]; then
    show_error "Arquivo $database não encontrado"
fi

# Exibir lista de usuários e seus limites
tput setaf 3; tput bold
echo ""; echo "LISTA DE USUARIOS E SEUS LIMITES:"
tput sgr0
echo ""

_userT=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody)
i=0
unset _userPass

while read -r _user; do
    i=$((i + 1))
    _oP=$i
    [[ $i -lt 10 ]] && _oP="0$i"

    if [[ $(grep -wc "$_user" $database) != "0" ]]; then
        limit=$(grep -w "$_user" $database | cut -d' ' -f2)
    else
        limit='1'
    fi
    
    l_user=$(echo -e "\033[1;31m[\033[1;36m$_oP\033[1;31m] \033[1;37m- \033[1;32m$_user\033[0m")
    lim=$(echo -e "\033[1;33mLimite\033[1;37m: $limit")
    printf '%-65s%s\n' "$l_user" "$lim"
    _userPass+="\n$_oP:$_user"
done <<< "$_userT"

echo ""

# Pedir ao usuário para selecionar um usuário
num_user=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
echo -ne "\033[1;32mDigite ou selecione um usuario \033[1;33m[\033[1;36m1\033[1;31m-\033[1;36m$num_user\033[1;33m]\033[1;37m: " 
read -r option

usuario=$(echo -e "${_userPass}" | grep -E "\b$option\b" | cut -d: -f2)

if [[ -z $option || -z $usuario ]]; then
    show_error "Usuário vazio ou não existente"
fi

# Verificar se o usuário existe no sistema
if getent passwd "$usuario" > /dev/null; then
    echo -ne "\n\033[1;32mNovo limite para o usuario \033[1;33m$usuario\033[1;37m: "
    read -r sshnum
    
    # Validar se o número digitado é válido
    if [[ -z $sshnum || ! $sshnum =~ ^[0-9]+$ || $sshnum -lt 1 ]]; then
        show_error "Você digitou um número inválido!"
    fi
    
    # Aplicar o novo limite
    grep -v "^$usuario[[:space:]]" "$database" > /tmp/a && mv /tmp/a "$database"
    echo "$usuario $sshnum" >> "$database"
    
    show_success "Limite aplicado para o usuário $usuario foi $sshnum"
    exit 0
else
    show_error "O usuário $usuario não foi encontrado"
fi
